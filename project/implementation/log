SYSTEM: Initializing view
SYSTEM: Window and Context created
SYSTEM: Using GLEW 1.13.0
INFO: OpenGL Version: 3.0 Mesa 17.2.8
INFO: Shading Language Version: 1.30
=========================
SYSTEM: Trying to load shader file sprite.vert
SYSTEM: Trying to load shader file sprite.frag
INFO: Loaded shader code: 

INFO: #version 130

uniform vec4 lightPositionViewSpace_0;
uniform float lightIntensity_0;
uniform float lightAttenuation_0;
uniform float lightRadius_0;
uniform vec3 lightDiffuseColor_0;
uniform vec3 lightSpecularColor_0;
varying vec3 lightVectorViewSpace_0;
varying float intensityBasedOnDist_0;
uniform vec4 lightPositionViewSpace_1;
uniform float lightIntensity_1;
uniform float lightAttenuation_1;
uniform float lightRadius_1;
uniform vec3 lightDiffuseColor_1;
uniform vec3 lightSpecularColor_1;
varying vec3 lightVectorViewSpace_1;
varying float intensityBasedOnDist_1;
varying vec3 normalVaryingViewSpace;
varying vec3 surfaceToCameraViewSpace;
uniform mat4 ModelViewMatrix;
uniform mat4 ProjectionMatrix;
attribute vec4 Position;
attribute vec3 Normal;
attribute vec3 Tangent;
attribute vec3 Bitangent;
attribute vec4 TexCoord;

uniform mediump float DayNightPulse;

varying vec4 texCoordVarying;
varying mediump float DayNightPulseVarying; // Value for the day and night cycle


void main()
{
    DayNightPulseVarying = DayNightPulse;

    texCoordVarying = Position - vec4(-0.5,0,-0.5,1);
    
    gl_Position = ProjectionMatrix * ModelViewMatrix * Position;
}

INFO: #version 130

//Was trying to fix the warning
uniform vec4 lightPositionViewSpace_0;
uniform float lightIntensity_0;
uniform float lightAttenuation_0;
uniform float lightRadius_0;
uniform vec3 lightDiffuseColor_0;
uniform vec3 lightSpecularColor_0;
varying vec3 lightVectorViewSpace_0;
varying float intensityBasedOnDist_0;
uniform vec4 lightPositionViewSpace_1;
uniform float lightIntensity_1;
uniform float lightAttenuation_1;
uniform float lightRadius_1;
uniform vec3 lightDiffuseColor_1;
uniform vec3 lightSpecularColor_1;
varying vec3 lightVectorViewSpace_1;
varying float intensityBasedOnDist_1;
varying vec3 normalVaryingViewSpace;
varying vec3 surfaceToCameraViewSpace;
uniform sampler2D NormalMap;
uniform sampler2D SpecularMap;
uniform vec3 ambientColor;
uniform vec3 Ka;
uniform vec3 Kd;
uniform vec3 Ks;
uniform float Ns;

varying lowp vec4 texCoordVarying;
uniform sampler2D DiffuseMapNew;
uniform sampler2D ColorLUT; // Lookup Texture
varying mediump float DayNightPulseVarying; // Value for the Day and Night Cycle

void main()
{
	lowp vec4 modelTexture = texture2D(DiffuseMapNew, texCoordVarying.xz);
	lowp float timeOfDay = clamp(DayNightPulseVarying, 0.05, 0.95); //limit with clamp, so there is not overflow when looking up the colors in the lut (avoids highlighting around the edges)
	lowp float intensity = 0.05;
	lowp vec4 lightColor = texture2D(ColorLUT, vec2(intensity, timeOfDay));

	//gl_FragColor = modelTexture;
	gl_FragColor = (lightColor * 2.0) * modelTexture;
    //gl_FragColor = texture2D(DiffuseMapNew, texCoordVarying.xz);
}

INFO: Created shader 'sprite'.
INFO: Number of available tex units: 32.
SYSTEM: loading Model: quad.obj
INFO: mtllib quad.mtl
INFO: o Plane
INFO: usemtl quad
SYSTEM: Trying to load shader file car.vert
SYSTEM: Trying to load shader file car.frag
INFO: Loaded shader code: 

INFO: #version 130

uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump mat3 NormalMatrix;

uniform mediump vec4 LightPos;
uniform mediump vec4 EyePos;

uniform mediump float DayNightPulse;
uniform mediump vec3 LightDirection;

attribute vec4 Position;
attribute vec3 Normal;
attribute vec3 Tangent;
attribute vec4 TexCoord;

varying lowp vec4 diffuseVarying;
varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

varying mediump float DayNightPulseVarying; // Value for the day and night cycle
varying mediump vec3 LightDirectionVarying; // Value for the direction light

void main()
{
    posVarying = ModelMatrix * Position;
    normalVarying = normalize(NormalMatrix * Normal);
    tangentVarying = normalize(NormalMatrix * Tangent);
    texCoordVarying = TexCoord;

    DayNightPulseVarying = DayNightPulse;
    LightDirectionVarying = LightDirection;
    
    gl_Position = ProjectionMatrix * ViewMatrix * posVarying;
}

INFO: #version 130


uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump mat3 NormalMatrix;

uniform mediump vec4 LightPos;

varying mediump float DayNightPulseVarying; // Value for the Day and Night Cycle
varying mediump vec3 LightDirectionVarying; // Value for light direction

uniform sampler2D NormalMap;
uniform sampler2D DiffuseMap;
uniform sampler2D ColorLUT; // Lookup Texture

varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

void main()
{ 
    mediump vec4 pos = posVarying;
    mediump vec3 n = normalize(normalVarying);   

    mediump vec3 l = normalize(LightDirectionVarying);
    
    lowp float intensity = dot(l, n);
    intensity = clamp(intensity, 0.05, 0.95); //limit with clamp, so there is not overflow when looking up the colors in the lut (avoids highlighting around the edges)
   
    lowp vec4 modelTexture = texture2D(DiffuseMap, texCoordVarying.st);

    lowp float timeOfDay = clamp(DayNightPulseVarying, 0.05, 0.95); //limit with clamp, so there is not overflow when looking up the colors in the lut (avoids highlighting around the edges)
    lowp float strength = 1.0; // Can be use to adjust the global amount of lightColor
    lowp vec4 lightColor = texture2D(ColorLUT, vec2(intensity, timeOfDay)) * vec4(strength, strength, strength, 1.0);

	//gl_FragColor = vec4(n, 1.0);
	gl_FragColor = lightColor * modelTexture;
	//gl_FragColor = modelTexture;
}

INFO: Created shader 'car'.
INFO: Number of available tex units: 32.
SYSTEM: loading Model: Car.obj
INFO: mtllib Car.mtl
INFO: o Full_Car_LowPoly_Untitled.003
INFO: usemtl carMaterial.002
SYSTEM: loading Model: Wheel.obj
INFO: mtllib Wheel.mtl
INFO: o Wheel_Untitled.082
INFO: usemtl Material
SYSTEM: Trying to load shader file general.vert
SYSTEM: Trying to load shader file general.frag
INFO: Loaded shader code: 

INFO: #version 130

uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump mat3 NormalMatrix;

uniform mediump vec4 EyePos;

uniform mediump float DayNightPulse;
uniform mediump vec3 LightDirection;

attribute vec4 Position;
attribute vec3 Normal;
attribute vec3 Tangent;
attribute vec4 TexCoord;

varying lowp vec4 diffuseVarying;
varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

varying mediump float DayNightPulseVarying; // Value for the day and night cycle
varying mediump vec3 LightDirectionVarying; // Value for the direction light

void main()
{
    posVarying = ModelMatrix * Position;
    normalVarying = normalize(NormalMatrix * Normal);
    tangentVarying = normalize(NormalMatrix * Tangent);
    texCoordVarying = TexCoord;

    DayNightPulseVarying = DayNightPulse;
    LightDirectionVarying = LightDirection;
    
    gl_Position = ProjectionMatrix * ViewMatrix * posVarying;
}

INFO: #version 130

uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump mat3 NormalMatrix;

varying mediump float DayNightPulseVarying; // Value for the Day and Night Cycle
varying mediump vec3 LightDirectionVarying; // Value for light direction

uniform sampler2D NormalMap;
uniform sampler2D DiffuseMap;
uniform sampler2D ColorLUT; // Lookup Texture

varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

void main()
{ 
    mediump vec4 pos = posVarying;
    mediump vec3 n = normalize(normalVarying);    

    //TBN Matrix
    mediump vec3 t = normalize(tangentVarying);
    t = normalize(t - dot(t, n) * n);
    mediump vec3 b = cross(n, t);
    if(dot(cross(t, n), b) < 0.0){
        t = t*vec3(-1.0);
    }
    mediump mat3 tbn = mat3(t, b, n);

    //Normal Map
    mediump vec3 BumpMapNormal = texture2D(NormalMap, texCoordVarying.st).xyz;
    BumpMapNormal = 2.0 * BumpMapNormal - vec3(1.0, 1.0, 1.0);
    n = tbn * BumpMapNormal;
    n = normalize(n);


    mediump vec3 l = normalize(LightDirectionVarying);
    
    lowp float intensity = dot(l, n);
    intensity = clamp(intensity, 0.05, 0.95); //limit with clamp, so there is not overflow when looking up the colors in the lut (avoids highlighting around the edges)
   
    lowp vec4 modelTexture = texture2D(DiffuseMap, texCoordVarying.st);

    lowp float timeOfDay = clamp(DayNightPulseVarying, 0.05, 0.95); //limit with clamp, so there is not overflow when looking up the colors in the lut (avoids highlighting around the edges)
    lowp float strength = 1.0; // Can be use to adjust the global amount of lightColor
    lowp vec4 lightColor = texture2D(ColorLUT, vec2(intensity, timeOfDay)) * vec4(strength, strength, strength, 1.0);

        
	//gl_FragColor = vec4(n, 1.0);
	gl_FragColor = lightColor * modelTexture;
	//gl_FragColor = modelTexture;
}

INFO: Created shader 'general'.
INFO: Number of available tex units: 32.
SYSTEM: loading Model: TrackNew.obj
INFO: mtllib TrackNew.mtl
INFO: o Track_Plane.002
INFO: usemtl IndyRoad
SYSTEM: loading Model: Base.obj
INFO: mtllib Base.mtl
INFO: o Base_Plane
INFO: usemtl Grass
SYSTEM: Trying to load shader file tree.vert
SYSTEM: Trying to load shader file tree.frag
INFO: Loaded shader code: 

INFO: #version 130

uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump mat3 NormalMatrix;

uniform mediump vec4 EyePos;

uniform mediump float DayNightPulse;
uniform mediump vec3 LightDirection;
uniform mediump float TreeAnimation;

attribute vec4 Position;
attribute vec3 Normal;
attribute vec3 Tangent;
attribute vec4 TexCoord;

varying lowp vec4 diffuseVarying;
varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

varying mediump float DayNightPulseVarying; // Value for the day and night cycle
varying mediump vec3 LightDirectionVarying; // Value for the direction light

void main()
{
    posVarying = ModelMatrix * Position;
    normalVarying = normalize(NormalMatrix * Normal);
    tangentVarying = normalize(NormalMatrix * Tangent);
    texCoordVarying = TexCoord * TreeAnimation;

    DayNightPulseVarying = DayNightPulse;
    LightDirectionVarying = LightDirection;
    
    
    gl_Position = ProjectionMatrix * ViewMatrix * posVarying;
}

INFO: #version 130

uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump mat3 NormalMatrix;

varying mediump float DayNightPulseVarying; // Value for the Day and Night Cycle
varying mediump vec3 LightDirectionVarying; // Value for light direction

uniform sampler2D NormalMap;
uniform sampler2D DiffuseMap;
uniform sampler2D ColorLUT; // Lookup Texture

varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

void main()
{ 
    mediump vec4 pos = posVarying;
    mediump vec3 n = normalize(normalVarying);    

    //TBN Matrix
    mediump vec3 t = normalize(tangentVarying);
    t = normalize(t - dot(t, n) * n);
    mediump vec3 b = cross(n, t);
    if(dot(cross(t, n), b) < 0.0){
        t = t*vec3(-1.0);
    }
    mediump mat3 tbn = mat3(t, b, n);

    //Normal Map
    mediump vec3 BumpMapNormal = texture2D(NormalMap, texCoordVarying.st).xyz;
    BumpMapNormal = 2.0 * BumpMapNormal - vec3(1.0, 1.0, 1.0);
    //n = tbn * BumpMapNormal;
    //n = normalize(n);


    mediump vec3 l = normalize(LightDirectionVarying);

    lowp float intensity = dot(l, n);
    intensity = clamp(intensity, 0.05, 0.95); //limit with clamp, so there is not overflow when looking up the colors in the lut (avoids highlighting around the edges)

    lowp vec4 modelTexture = texture2D(DiffuseMap, texCoordVarying.st);

    lowp float timeOfDay = clamp(DayNightPulseVarying, 0.05, 0.95); //limit with clamp, so there is not overflow when looking up the colors in the lut (avoids highlighting around the edges)
    lowp float strength = 1.0; // Can be use to adjust the global amount of lightColor
    lowp vec4 lightColor = texture2D(ColorLUT, vec2(intensity, timeOfDay)) * vec4(strength, strength, strength, 1.0);

	//gl_FragColor = vec4(n, 1.0);
	gl_FragColor = lightColor * modelTexture;
	//gl_FragColor = modelTexture;
	//gl_FragColor = lightColor;
}

INFO: Created shader 'tree'.
INFO: Number of available tex units: 32.
SYSTEM: loading Model: Tree.obj
INFO: mtllib Tree.mtl
INFO: o Tree_Low_Cylinder
INFO: usemtl Tree
SYSTEM: Trying to load shader file marker.vert
SYSTEM: Trying to load shader file marker.frag
INFO: Loaded shader code: 

INFO: #version 130

uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump vec4 EyePos;

attribute vec4 Position;
attribute vec3 Normal;
attribute vec3 Tangent;
attribute vec4 TexCoord;

varying lowp vec4 diffuseVarying;
varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

void main()
{
    posVarying = ModelMatrix * Position;
    texCoordVarying = TexCoord;
    
    gl_Position = ProjectionMatrix * ViewMatrix * posVarying;
}

INFO: #version 130

uniform mediump mat4 ViewMatrix;
uniform mediump mat4 ModelMatrix;
uniform mediump mat4 ProjectionMatrix;

uniform mediump mat3 NormalMatrix;

varying lowp vec4 texCoordVarying;

varying mediump vec4 posVarying;        // pos in world space
varying mediump vec3 normalVarying;     // normal in world space
varying mediump vec3 tangentVarying;    // tangent in world space

void main()
{         
	gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
	//gl_FragColor = lightColor * modelTexture;
	//gl_FragColor = modelTexture;
}

INFO: Created shader 'marker'.
INFO: Number of available tex units: 32.
SYSTEM: loading Model: Cube.obj
INFO: mtllib Cube.mtl
INFO: o Cube
INFO: usemtl Cube
INFO: Generated shader code: 

INFO: #version 120
varying vec2 texCoordVarying;
varying vec3 normalVaryingViewSpace;
uniform mat4 ModelViewMatrix;
uniform mat4 ProjectionMatrix;
attribute vec4 Position;
attribute vec3 Normal;
attribute vec3 Tangent;
attribute vec3 Bitangent;
attribute vec4 TexCoord;
void main() {
vec4 posViewSpace = ModelViewMatrix*Position;
float lightDistance = 0.0;
texCoordVarying = TexCoord.st;
normalVaryingViewSpace = mat3(ModelViewMatrix)*Normal;
gl_Position = ProjectionMatrix*posViewSpace;
}

INFO: #version 120
varying vec2 texCoordVarying;
varying vec3 normalVaryingViewSpace;
uniform sampler2D DiffuseMap;
uniform sampler2D NormalMap;
uniform sampler2D SpecularMap;
uniform sampler2D CharacterMap;
uniform vec3 ambientColor;
uniform vec3 Ka;
uniform vec3 Kd;
uniform vec3 Ks;
uniform float Ns;
void main() {
vec4 diffuse = vec4(1.0,1.0,1.0,1.0);
vec3 surfaceNormal = normalize(normalVaryingViewSpace);
float intensity = 0.0;
diffuse = diffuse * vec4(Kd,1.0);
gl_FragColor = clamp(diffuse, 0.0, 1.0);
gl_FragColor.a *= texture2D(CharacterMap, texCoordVarying).r;
}
INFO: Created shader 'Lap Timer'.
INFO: Number of available tex units: 32.
SYSTEM: Renderer started
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
Movement Script Boolean0
